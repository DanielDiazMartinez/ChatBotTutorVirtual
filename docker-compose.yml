services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - user_uploads:/app/uploads
    depends_on:
      - db
    command: >
       sh -c "until pg_isready -h db -p 5432; do sleep 2; done &&
         alembic upgrade head &&
         uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
#Production
#sh -c "alembic upgrade head &&
#uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    x-file-watch:
      paths:
        - ./backend

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
    driver: local
  user_uploads:
    driver: local

# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: fastapi_app
#     ports:
#       - "8000:8000"
#     env_file:
#       - ./backend/.env
#     volumes:
#       - ./backend:/app
#       - user_uploads:/app/uploads
#     depends_on:
#       - db
#     command: >
#       sh -c "alembic upgrade head &&
#              uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

#   # frontend:
#   #   build:
#   #     context: ./frontend
#   #     dockerfile: Dockerfile
#   #   container_name: angular_frontend
#   #   ports:
#   #     - "80:80"

#   db:
#     image: postgres:15
#     container_name: postgres_db
#     restart: always
#     env_file:
#       - ./backend/.env
#     ports:
#       - "5432:5432"
#     volumes:

#       - postgres_data:/var/lib/postgresql/data

# volumes:
#   postgres_data:
#     driver: local
#   user_uploads:
#     driver: local
