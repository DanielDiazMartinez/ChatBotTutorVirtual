services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: angular_app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - ./backend/logs:/app/logs
    depends_on:
      db:
        condition: service_healthy # Espera a que la BBDD estÃ© saludable
    command: >
       sh -c "until pg_isready -h db -p 5432 -U $$POSTGRES_USER; do echo 'Waiting for db...'; sleep 2; done &&
         alembic upgrade head &&
         uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    x-file-watch:
      paths:
        - ./backend
    networks:
      - app-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
              count: all

  db:
    image: pgvector/pgvector:pg15
    container_name: postgres_db
    restart: always
    env_file:
      - ./backend/.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
      
volumes:
  postgres_data:
    driver: local
  user_uploads:
    driver: local


networks:
  app-network:
    driver: bridge