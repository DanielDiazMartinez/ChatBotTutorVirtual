"""fusion_roles_en_un_solo_usuario

Revision ID: 6ce82d78750c
Revises: 8cdae24154d1
Create Date: 2025-05-22 18:02:45.516203

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6ce82d78750c'
down_revision: Union[str, None] = '8cdae24154d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tablas temporales para almacenar relaciones existentes
    op.execute("""
        CREATE TABLE temp_teacher_subjects AS
        SELECT teacher_id, subject_id FROM teacher_subjects;
    """)
    
    op.execute("""
        CREATE TABLE temp_student_subjects AS
        SELECT student_id, subject_id FROM student_subjects;
    """)
    
    # Renombrar teacher_id a user_id en la tabla documents
    op.alter_column('documents', 'teacher_id', new_column_name='user_id')
    
    # Eliminar relaciones existentes
    op.drop_table('teacher_subjects')
    op.drop_table('student_subjects')
    
    # Crear nueva tabla de relación user_subjects
    op.create_table('user_subjects',
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('subject_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('user_id', 'subject_id')
    )
    
    # Migrar datos de las tablas temporales a la nueva tabla
    op.execute("""
        INSERT INTO user_subjects (user_id, subject_id)
        SELECT teacher_id, subject_id FROM temp_teacher_subjects;
    """)
    
    op.execute("""
        INSERT INTO user_subjects (user_id, subject_id)
        SELECT student_id, subject_id FROM temp_student_subjects
        ON CONFLICT (user_id, subject_id) DO NOTHING;
    """)
    
    # Eliminar tablas temporales
    op.execute("DROP TABLE temp_teacher_subjects;")
    op.execute("DROP TABLE temp_student_subjects;")
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tablas anteriores
    op.create_table('teacher_subjects',
        sa.Column('teacher_id', sa.Integer(), nullable=False),
        sa.Column('subject_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
        sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('teacher_id', 'subject_id')
    )
    
    op.create_table('student_subjects',
        sa.Column('student_id', sa.Integer(), nullable=False),
        sa.Column('subject_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
        sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
        sa.PrimaryKeyConstraint('student_id', 'subject_id')
    )
    
    # Crear tablas temporales para migrar los datos
    op.execute("""
        CREATE TABLE temp_user_subjects AS
        SELECT user_id, subject_id FROM user_subjects;
    """)
    
    # Insertar datos, asumiendo que los profesores tienen role='teacher' y estudiantes role='student'
    op.execute("""
        INSERT INTO teacher_subjects (teacher_id, subject_id)
        SELECT us.user_id, us.subject_id 
        FROM temp_user_subjects us
        JOIN users u ON us.user_id = u.id
        WHERE u.role = 'teacher';
    """)
    
    op.execute("""
        INSERT INTO student_subjects (student_id, subject_id)
        SELECT us.user_id, us.subject_id 
        FROM temp_user_subjects us
        JOIN users u ON us.user_id = u.id
        WHERE u.role = 'student';
    """)
    
    # Eliminar tabla temporal
    op.execute("DROP TABLE temp_user_subjects;")
    
    # Eliminar la tabla de relación unificada
    op.drop_table('user_subjects')
    
    # Renombrar user_id a teacher_id en la tabla documents
    op.alter_column('documents', 'user_id', new_column_name='teacher_id')
    
    # ### end Alembic commands ###