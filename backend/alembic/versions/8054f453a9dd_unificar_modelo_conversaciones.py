"""unificar_modelo_conversaciones

Revision ID: 8054f453a9dd
Revises: 88c4ac265589
Create Date: 2025-05-18 10:32:59.883126

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8054f453a9dd'
down_revision: Union[str, None] = '88c4ac265589'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conversations', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('conversations', sa.Column('user_role', sa.String(), nullable=True))
    
    # Transferir datos existentes a las nuevas columnas
    conn = op.get_bind()
    conn.execute(sa.text("""
        UPDATE conversations 
        SET user_id = student_id, user_role = 'student'
        WHERE student_id IS NOT NULL
    """))
    
    conn.execute(sa.text("""
        UPDATE conversations 
        SET user_id = teacher_id, user_role = 'teacher'
        WHERE teacher_id IS NOT NULL
    """))
    
    # Hacer que las nuevas columnas no sean nulables después de migrar los datos
    op.alter_column('conversations', 'user_id', nullable=False)
    op.alter_column('conversations', 'user_role', nullable=False)
    
    # Eliminar las restricciones de clave foránea antiguas
    op.drop_constraint('conversations_teacher_id_fkey', 'conversations', type_='foreignkey')
    op.drop_constraint('conversations_student_id_fkey', 'conversations', type_='foreignkey')
    
    # Añadir la nueva restricción de clave foránea
    op.create_foreign_key(None, 'conversations', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    
    # Eliminar las columnas antiguas
    op.drop_column('conversations', 'student_id')
    op.drop_column('conversations', 'teacher_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('conversations', sa.Column('teacher_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('conversations', sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True))
    
    # Transferir datos a las columnas antiguas
    conn = op.get_bind()
    conn.execute(sa.text("""
        UPDATE conversations 
        SET student_id = user_id
        WHERE user_role = 'student'
    """))
    
    conn.execute(sa.text("""
        UPDATE conversations 
        SET teacher_id = user_id
        WHERE user_role = 'teacher'
    """))
    
    # Crear las restricciones de clave foránea
    op.drop_constraint(None, 'conversations', type_='foreignkey')
    op.create_foreign_key('conversations_student_id_fkey', 'conversations', 'users', ['student_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('conversations_teacher_id_fkey', 'conversations', 'users', ['teacher_id'], ['id'], ondelete='CASCADE')
    
    # Eliminar las columnas nuevas
    op.drop_column('conversations', 'user_role')
    op.drop_column('conversations', 'user_id')
    # ### end Alembic commands ###